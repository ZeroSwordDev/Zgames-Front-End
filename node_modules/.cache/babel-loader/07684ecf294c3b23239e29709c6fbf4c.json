{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josel\\\\OneDrive\\\\Escritorio\\\\PI-Videogames-main\\\\client\\\\src\\\\components\\\\CardGames\\\\CardGames.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardGames = _ref => {\n  _s();\n  let {\n    game\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true); // Agregar una variable de estado para el estado de carga\n\n  useEffect(() => {\n    setIsLoading(true); // Establecer isLoading a true antes de cargar los juegos\n    setTimeout(() => {\n      setIsLoading(false); // Establecer isLoading a false después de cargar los juegos (esto es solo un ejemplo, debe reemplazar esto con su lógica real de carga de datos)\n    }, 2000); // Simular una carga de datos de 2 segundos (esto es solo un ejemplo, debe reemplazar esto con su lógica real de carga de datos)\n  }, []); // Ejecutar useEffect solo una vez al montar el componente\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"LOADING..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: game.background_image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titleygenres\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/games/${game.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: game.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), game.genres.map(genre => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: genre.name\n        }, genre.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(CardGames, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n_c = CardGames;\nexport default CardGames;\nvar _c;\n$RefreshReg$(_c, \"CardGames\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","CardGames","_ref","_s","game","isLoading","setIsLoading","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","background_image","alt","to","id","name","genres","map","genre","_c","$RefreshReg$"],"sources":["C:/Users/josel/OneDrive/Escritorio/PI-Videogames-main/client/src/components/CardGames/CardGames.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CardGames = ({ game }) => {\r\n  const [isLoading, setIsLoading] = useState(true); // Agregar una variable de estado para el estado de carga\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true); // Establecer isLoading a true antes de cargar los juegos\r\n    setTimeout(() => {\r\n      setIsLoading(false); // Establecer isLoading a false después de cargar los juegos (esto es solo un ejemplo, debe reemplazar esto con su lógica real de carga de datos)\r\n    }, 2000); // Simular una carga de datos de 2 segundos (esto es solo un ejemplo, debe reemplazar esto con su lógica real de carga de datos)\r\n  }, []); // Ejecutar useEffect solo una vez al montar el componente\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <p>LOADING..</p>\r\n      ) : (\r\n        <div className=\"card\">\r\n          <img src={game.background_image} alt=\"\" />\r\n          <div className=\"titleygenres\">\r\n            <Link to={`/games/${game.id}`}>\r\n              <h1>{game.name}</h1>\r\n            </Link>\r\n            {game.genres.map((genre) => (\r\n              <p key={genre.id}>{genre.name}</p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardGames;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,SAAS,GAAGC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACzB,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElDD,SAAS,CAAC,MAAM;IACdY,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACpBC,UAAU,CAAC,MAAM;MACfD,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACER,OAAA,CAAAE,SAAA;IAAAQ,QAAA,EACGH,SAAS,gBACRP,OAAA;MAAAU,QAAA,EAAG;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,gBAEhBd,OAAA;MAAKe,SAAS,EAAC,MAAM;MAAAL,QAAA,gBACnBV,OAAA;QAAKgB,GAAG,EAAEV,IAAI,CAACW,gBAAiB;QAACC,GAAG,EAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC1Cd,OAAA;QAAKe,SAAS,EAAC,cAAc;QAAAL,QAAA,gBAC3BV,OAAA,CAACF,IAAI;UAACqB,EAAE,EAAG,UAASb,IAAI,CAACc,EAAG,EAAE;UAAAV,QAAA,eAC5BV,OAAA;YAAAU,QAAA,EAAKJ,IAAI,CAACe;UAAI;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAM;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACf,EACNR,IAAI,CAACgB,MAAM,CAACC,GAAG,CAAEC,KAAK,iBACrBxB,OAAA;UAAAU,QAAA,EAAmBc,KAAK,CAACH;QAAI,GAArBG,KAAK,CAACJ,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAET,iBACA;AAEP,CAAC;AAACT,EAAA,CA7BIF,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}